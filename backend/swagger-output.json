{
  "openapi": "3.0.0",
  "info": {
    "title": "Board Game Prototype API",
    "version": "1.0.0",
    "description": "## 概要\nこのAPIは、ボードゲームプロトタイプの作成と管理を行うためのものです。\n\n## 認証\n- 基本的にAPIエンドポイントは認証が必要です\n- アプリケーションを起動し、Google OAuth2.0を使用した認証を行なってください（Swagger UIでは認証ができません）\n- 認証後、Cookieにセッション情報が保存されます\n"
  },
  "components": {
    "schemas": {
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "処理成功時のメッセージ"
          }
        },
        "required": ["message"],
        "example": {
          "message": "正常に処理が完了しました"
        }
      },
      "Error400Response": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "エラーメッセージ"
          }
        },
        "required": ["error"],
        "example": {
          "error": "リクエストが不正です"
        }
      },
      "Error401Response": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "エラーメッセージ"
          }
        },
        "required": ["error"],
        "example": {
          "error": "認証が必要です"
        }
      },
      "Error404Response": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "エラーメッセージ"
          }
        },
        "required": ["error"],
        "example": {
          "error": "リソースが見つかりません"
        }
      },
      "Error500Response": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "エラーメッセージ"
          }
        },
        "required": ["error"],
        "example": {
          "error": "予期せぬエラーが発生しました"
        }
      },
      "Image": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "type": "string"
          },
          "storagePath": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "fileSize": {
            "type": "integer"
          },
          "uploaderUserId": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "displayName",
          "storagePath",
          "contentType",
          "fileSize",
          "uploaderUserId",
          "createdAt",
          "updatedAt"
        ]
      },
      "Part": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "type": {
            "type": "string",
            "enum": ["token", "card", "hand", "deck", "area"]
          },
          "prototypeId": {
            "type": "string",
            "format": "uuid"
          },
          "position": {
            "type": "object",
            "additionalProperties": true
          },
          "width": {
            "type": "integer"
          },
          "height": {
            "type": "integer"
          },
          "order": {
            "type": "integer"
          },
          "frontSide": {
            "oneOf": [
              {
                "type": "string",
                "enum": ["front", "back"]
              },
              {
                "type": "null"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "prototypeId",
          "position",
          "width",
          "height",
          "order",
          "createdAt",
          "updatedAt"
        ]
      },
      "PartProperty": {
        "type": "object",
        "properties": {
          "partId": {
            "type": "integer"
          },
          "side": {
            "type": "string",
            "enum": ["front", "back"]
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "textColor": {
            "type": "string"
          },
          "imageId": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "partId",
          "side",
          "name",
          "description",
          "color",
          "textColor",
          "createdAt",
          "updatedAt"
        ]
      },
      "Permission": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "resource": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "resource",
          "action",
          "createdAt",
          "updatedAt"
        ]
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": ["id", "userId", "createdAt", "updatedAt"]
      },
      "Prototype": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "projectId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["MASTER", "VERSION", "INSTANCE"]
          },
          "sourceVersionPrototypeId": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "projectId",
          "name",
          "type",
          "createdAt",
          "updatedAt"
        ]
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": ["id", "name", "createdAt", "updatedAt"]
      },
      "RolePermission": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer"
          },
          "permissionId": {
            "type": "integer"
          }
        },
        "required": ["roleId", "permissionId"]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": ["id", "username", "createdAt", "updatedAt"]
      },
      "UserRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "roleId": {
            "type": "integer"
          },
          "resourceType": {
            "type": "string"
          },
          "resourceId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "userId",
          "roleId",
          "resourceType",
          "resourceId",
          "createdAt",
          "updatedAt"
        ]
      }
    }
  },
  "paths": {
    "/api/users/search": {
      "get": {
        "tags": ["Users"],
        "summary": "ユーザー検索",
        "description": "ユーザー名でユーザーを検索します。",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true,
            "description": "検索するユーザー名",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "検索結果を返します",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{userId}": {
      "put": {
        "tags": ["Users"],
        "summary": "ユーザー情報更新",
        "description": "ユーザー名を更新します。",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "更新するユーザーのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username"],
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "新しいユーザー名"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ユーザー情報が更新されました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "リクエストが不正です"
          },
          "401": {
            "description": "アクセス権がありません"
          },
          "404": {
            "description": "ユーザーが見つかりません"
          },
          "500": {
            "description": "サーバーエラー"
          }
        }
      }
    },
    "/api/users/{userId}/need-tutorial": {
      "get": {
        "tags": ["Users"],
        "summary": "チュートリアル必要判定",
        "description": "指定されたユーザーがチュートリアルを表示すべきか判定します。",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "判定するユーザーのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "判定結果を返します",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "needTutorial": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "アクセス権がありません"
          },
          "500": {
            "description": "サーバーエラー"
          }
        }
      }
    },
    "/api/prototypes/{prototypeId}": {
      "get": {
        "tags": ["Prototypes"],
        "summary": "特定のプロトタイプ取得",
        "description": "指定されたIDのプロトタイプを取得します。",
        "parameters": [
          {
            "name": "prototypeId",
            "in": "path",
            "required": true,
            "description": "プロトタイプのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "プロトタイプを返します",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "prototype": {
                      "$ref": "#/components/schemas/Prototype"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "プロトタイプが見つかりません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Prototypes"],
        "summary": "プロトタイプ更新",
        "description": "指定されたIDのプロトタイプを更新します。",
        "parameters": [
          {
            "name": "prototypeId",
            "in": "path",
            "required": true,
            "description": "プロトタイプのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "minPlayers": {
                    "type": "integer"
                  },
                  "maxPlayers": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "プロトタイプを更新しました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prototype"
                }
              }
            }
          },
          "404": {
            "description": "プロトタイプが見つかりません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Prototypes"],
        "summary": "プロトタイプ削除",
        "description": "指定されたIDのプロトタイプを削除します。",
        "parameters": [
          {
            "name": "prototypeId",
            "in": "path",
            "required": true,
            "description": "プロトタイプのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "プロトタイプを削除しました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "プロトタイプが見つかりません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects": {
      "get": {
        "tags": ["Projects"],
        "summary": "プロジェクト一覧取得",
        "description": "ユーザーがアクセス可能なプロジェクトの一覧を取得します。",
        "responses": {
          "200": {
            "description": "アクセス可能なプロジェクトの一覧を返します。",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "project": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Project"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "owner": {
                                "nullable": true,
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "username": {
                                    "type": "string"
                                  }
                                }
                              },
                              "permissions": {
                                "type": "object",
                                "properties": {
                                  "canRead": {
                                    "type": "boolean"
                                  },
                                  "canWrite": {
                                    "type": "boolean"
                                  },
                                  "canDelete": {
                                    "type": "boolean"
                                  },
                                  "canManage": {
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "canRead",
                                  "canWrite",
                                  "canDelete",
                                  "canManage"
                                ]
                              }
                            }
                          }
                        ]
                      },
                      "prototypes": {
                        "type": "array",
                        "items": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Prototype"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "parts": {
                                  "type": "array",
                                  "items": {
                                    "allOf": [
                                      {
                                        "$ref": "#/components/schemas/Part"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "partProperties": {
                                            "type": "array",
                                            "items": {
                                              "allOf": [
                                                {
                                                  "$ref": "#/components/schemas/PartProperty"
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "image": {
                                                      "$ref": "#/components/schemas/Image"
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Projects"],
        "summary": "プロジェクト作成",
        "description": "新しいプロジェクトを作成します。",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "新しいプロジェクトを作成しました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "description": "リクエストが不正です",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error400Response"
                }
              }
            }
          },
          "500": {
            "description": "サーバーエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/versions": {
      "post": {
        "tags": ["Projects"],
        "summary": "プロトタイプルーム作成",
        "description": "指定されたプロジェクトのプロトタイプルーム（VERSIONとINSTANCE）を作成します。",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "description": "プロジェクトのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "プロトタイプ名"
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "プロトタイプルームを作成しました",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "$ref": "#/components/schemas/Prototype"
                    },
                    "instance": {
                      "$ref": "#/components/schemas/Prototype"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "リクエストが不正です",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error400Response"
                }
              }
            }
          },
          "404": {
            "description": "プロジェクトが見つかりません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          },
          "500": {
            "description": "サーバーエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/versions/{prototypeId}": {
      "delete": {
        "tags": ["Projects"],
        "summary": "プロトタイプルーム削除",
        "description": "指定されたプロジェクトのプロトタイプルーム（VERSIONとINSTANCE）を削除します。",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "description": "プロジェクトのID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "prototypeId",
            "in": "path",
            "required": true,
            "description": "削除するVERSIONプロトタイプのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "プロトタイプルームを削除しました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "プロトタイプルームが見つかりません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          },
          "500": {
            "description": "サーバーエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}": {
      "get": {
        "tags": ["Projects"],
        "summary": "特定のプロジェクトの詳細とプロトタイプ一覧取得",
        "description": "指定されたIDのプロジェクトの詳細情報と、そのプロジェクトに属するプロトタイプの一覧を取得します。",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "description": "プロジェクトのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "プロジェクトと関連するプロトタイプの情報を返します",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Project"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "prototypes": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Prototype"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "プロジェクトが見つかりません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Projects"],
        "summary": "プロジェクト削除",
        "description": "指定されたIDのプロジェクトを削除します。",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "description": "プロジェクトのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "プロジェクトを削除しました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "プロジェクトが見つかりません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/access-users": {
      "get": {
        "tags": ["Projects"],
        "summary": "プロジェクトへのアクセス権を取得",
        "description": "指定されたプロジェクトにアクセス可能なユーザーを取得します。",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "description": "プロジェクトのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "アクセス可能なユーザーの一覧を返します",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/invite": {
      "post": {
        "tags": ["Projects"],
        "summary": "ユーザーにプロジェクトへのアクセス権を付与",
        "description": "指定されたプロジェクトにユーザーを招待します。Adminロール（またはMANAGE権限）を持つユーザーのみが利用できます。",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "description": "プロジェクトのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "guestIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "招待するユーザーのIDリスト"
                  },
                  "roleType": {
                    "type": "string",
                    "enum": ["admin", "editor", "viewer"],
                    "default": "editor",
                    "description": "付与するロールタイプ（Admin, Editor, Viewer）"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ユーザーを招待しました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "リクエストが不正です（無効なロールタイプまたは無効なロールが指定された場合）",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error400Response"
                }
              }
            }
          },
          "404": {
            "description": "プロジェクトが見つかりません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          },
          "500": {
            "description": "サーバーエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/invite/{guestId}": {
      "delete": {
        "tags": ["Projects"],
        "summary": "ユーザーのアクセス権を削除",
        "description": "指定されたプロジェクトからユーザーのアクセス権を削除します。Adminロール（またはMANAGE権限）を持つユーザーのみが利用できます。",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "description": "プロジェクトのID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "guestId",
            "in": "path",
            "required": true,
            "description": "ゲストユーザーのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ユーザーのアクセス権を削除しました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "リクエストが不正です",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error400Response"
                }
              }
            }
          },
          "404": {
            "description": "プロジェクトが見つかりません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          },
          "500": {
            "description": "サーバーエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/duplicate": {
      "post": {
        "tags": ["Projects"],
        "summary": "プロジェクトの複製",
        "description": "指定されたプロジェクトを複製します。書き込みまたはAdmin権限が必要です。",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "description": "プロジェクトのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "プロジェクトを複製しました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "プロジェクトが見つかりません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          },
          "500": {
            "description": "サーバーエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/members": {
      "get": {
        "tags": ["Projects"],
        "summary": "プロジェクトのメンバー一覧取得",
        "description": "プロジェクトのメンバーとそのロールを取得します。",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "description": "プロジェクトのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "メンバー一覧を返します",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string"
                      },
                      "roles": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{projectId}/roles": {
      "get": {
        "tags": ["Projects"],
        "summary": "プロジェクトのロール一覧取得",
        "description": "プロジェクトのユーザーロール一覧を取得します。",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "プロジェクトのID"
          }
        ],
        "responses": {
          "200": {
            "description": "ロール一覧",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string"
                      },
                      "user": {
                        "$ref": "#/components/schemas/User"
                      },
                      "roles": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Projects"],
        "summary": "プロジェクトにロールを追加",
        "description": "ユーザーにプロジェクトのロールを割り当てます。",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "プロジェクトのID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "roleName": {
                    "type": "string",
                    "enum": ["admin", "editor", "viewer"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ロールが追加されました"
          },
          "400": {
            "description": "リクエストが不正です"
          },
          "404": {
            "description": "ユーザーまたはロールが見つかりません"
          },
          "409": {
            "description": "ユーザーは既にこのロールを持っています"
          }
        }
      }
    },
    "/api/projects/{projectId}/roles/{userId}": {
      "delete": {
        "tags": ["Projects"],
        "summary": "プロジェクトからロールを削除",
        "description": "ユーザーからプロジェクトのロールを削除します。",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "プロジェクトのID"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ユーザーのID"
          }
        ],
        "responses": {
          "200": {
            "description": "ロールが削除されました"
          },
          "404": {
            "description": "ユーザーまたはロールが見つかりません"
          }
        }
      },
      "put": {
        "tags": ["Projects"],
        "summary": "プロジェクトのロールを更新",
        "description": "ユーザーのプロジェクトロールを変更します。",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "プロジェクトのID"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ユーザーのID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleName": {
                    "type": "string",
                    "enum": ["admin", "editor", "viewer"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ロールが更新されました"
          },
          "400": {
            "description": "リクエストが不正です"
          },
          "404": {
            "description": "ユーザーまたはロールが見つかりません"
          }
        }
      }
    },
    "/api/images": {
      "post": {
        "tags": ["Images"],
        "summary": "画像アップロード",
        "description": "S3に画像をアップロードし、画像のメタデータを保存します。",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "アップロードする画像ファイル"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "画像が正常にアップロードされました",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Image"
                }
              }
            }
          },
          "400": {
            "description": "アップロード対象の画像が存在しない、またはサポートされていない画像形式です",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error400Response"
                }
              }
            }
          },
          "401": {
            "description": "認証されていないユーザーです",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error401Response"
                }
              }
            }
          },
          "500": {
            "description": "画像のアップロードに失敗しました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/images/{imageId}": {
      "get": {
        "tags": ["Images"],
        "summary": "画像取得",
        "description": "S3から指定された画像を取得し、画像データを直接返します。",
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "description": "取得する画像のID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "画像が正常に取得されました",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Image ID が指定されていない、またはリクエストが不正です",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error400Response"
                }
              }
            }
          },
          "401": {
            "description": "認証されていないユーザーです",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error401Response"
                }
              }
            }
          },
          "404": {
            "description": "指定された画像が存在しません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          },
          "500": {
            "description": "画像を取得できませんでした",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500Response"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Images"],
        "summary": "画像削除",
        "description": "S3から指定された画像を削除します。",
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "description": "削除する画像のID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "prototypeId",
            "in": "query",
            "required": true,
            "description": "プロトタイプID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partId",
            "in": "query",
            "required": true,
            "description": "パーツID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "side",
            "in": "query",
            "required": true,
            "description": "面（front または back）",
            "schema": {
              "type": "string",
              "enum": ["front", "back"]
            }
          },
          {
            "name": "emitUpdate",
            "in": "query",
            "required": true,
            "description": "更新をemitするかどうか（デフォルトはfalse）",
            "schema": {
              "type": "string",
              "enum": [true, false],
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "画像が正常に削除されました"
          },
          "400": {
            "description": "Image ID が指定されていない、またはリクエストが不正です",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error400Response"
                }
              }
            }
          },
          "401": {
            "description": "認証されていないユーザーです",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error401Response"
                }
              }
            }
          },
          "404": {
            "description": "指定された画像が存在しません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          },
          "500": {
            "description": "画像を削除できませんでした",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/donations/checkout-session": {
      "post": {
        "tags": ["Donations"],
        "summary": "Stripe Checkout セッションを作成する",
        "description": "指定した寄付金額に対する Stripe Checkout セッションを生成します。",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["amount"],
                "properties": {
                  "amount": {
                    "type": "integer",
                    "enum": [100, 500, 1000, 5000, 10000],
                    "description": "寄付金額（円）"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Stripe Checkout セッションを作成しました。",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sessionId": {
                      "type": "string",
                      "description": "Stripe Checkout セッションID"
                    },
                    "sessionUrl": {
                      "type": "string",
                      "nullable": true,
                      "description": "Stripe Checkout のリダイレクト URL"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "無効な寄付金額が指定されました。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error400Response"
                }
              }
            }
          },
          "500": {
            "description": "Stripe Checkout セッションの生成時にエラーが発生しました。",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500Response"
                }
              }
            }
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "tags": ["Auth"],
        "summary": "Googleログイン",
        "description": "Googleアカウントを使用してログインします。",
        "responses": {
          "302": {
            "description": "リダイレクト",
            "headers": {
              "Location": {
                "description": "リダイレクト先のURL",
                "schema": {
                  "type": "string"
                },
                "example": "https://accounts.google.com/o/oauth2/auth"
              }
            }
          }
        }
      }
    },
    "/auth/google/callback": {
      "get": {
        "tags": ["Auth"],
        "summary": "Googleログインコールバック",
        "description": "GoogleログインのコールバックURL。",
        "responses": {
          "302": {
            "description": "ログイン成功時にリダイレクト",
            "headers": {
              "Location": {
                "description": "リダイレクト先のURL",
                "schema": {
                  "type": "string"
                },
                "example": "http://localhost:3000/projects"
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "ログアウト",
        "description": "現在のセッションを終了し、ユーザーをログアウトします。",
        "responses": {
          "200": {
            "description": "ログアウト成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "500": {
            "description": "ログアウト失敗",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500Response"
                }
              }
            }
          }
        }
      }
    },
    "/auth/user": {
      "get": {
        "tags": ["Auth"],
        "summary": "ユーザー情報取得",
        "description": "現在ログインしているユーザーの情報を取得します。",
        "responses": {
          "200": {
            "description": "ユーザー情報を返します",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Users",
      "description": "ユーザー管理API"
    },
    {
      "name": "Prototypes",
      "description": "プロトタイプ管理API"
    },
    {
      "name": "Images",
      "description": "画像管理API"
    },
    {
      "name": "Auth",
      "description": "認証関連のAPI"
    }
  ]
}
