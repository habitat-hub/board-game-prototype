{
  "openapi": "3.0.0",
  "info": {
    "title": "Board Game Prototype API",
    "version": "1.0.0",
    "description": "\n## 概要\nこのAPIは、ボードゲームプロトタイプの作成と管理を行うためのものです。\n\n## 認証\n- 基本的にAPIエンドポイントは認証が必要です\n- アプリケーションを起動し、Google OAuth2.0を使用した認証を行なってください（Swagger UIでは認証ができません）\n- 認証後、Cookieにセッション情報が保存されます\n"
  },
  "components": {
    "schemas": {
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "処理成功時のメッセージ"
          }
        },
        "required": [
          "message"
        ],
        "example": {
          "message": "正常に処理が完了しました"
        }
      },
      "Error400Response": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "エラーメッセージ"
          }
        },
        "required": [
          "error"
        ],
        "example": {
          "error": "リクエストが不正です"
        }
      },
      "Error404Response": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "エラーメッセージ"
          }
        },
        "required": [
          "error"
        ],
        "example": {
          "error": "リソースが見つかりません"
        }
      },
      "Error500Response": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "エラーメッセージ"
          }
        },
        "required": [
          "error"
        ],
        "example": {
          "error": "予期せぬエラーが発生しました"
        }
      },
      "Image": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "type": "string"
          },
          "storagePath": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "fileSize": {
            "type": "integer"
          },
          "uploaderUserId": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "displayName",
          "storagePath",
          "contentType",
          "fileSize",
          "uploaderUserId",
          "createdAt",
          "updatedAt"
        ]
      },
      "Part": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "type": {
            "type": "string",
            "enum": [
              "token",
              "card",
              "hand",
              "deck",
              "area"
            ]
          },
          "prototypeId": {
            "type": "string",
            "format": "uuid"
          },
          "parentId": {
            "type": "integer"
          },
          "position": {
            "type": "object",
            "additionalProperties": true
          },
          "width": {
            "type": "integer"
          },
          "height": {
            "type": "integer"
          },
          "order": {
            "type": "integer"
          },
          "configurableTypeAsChild": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "originalPartId": {
            "type": "integer"
          },
          "isReversible": {
            "type": "boolean"
          },
          "isFlipped": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "string",
            "format": "uuid"
          },
          "canReverseCardOnDeck": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "prototypeId",
          "position",
          "width",
          "height",
          "order",
          "configurableTypeAsChild",
          "createdAt",
          "updatedAt"
        ]
      },
      "PartProperty": {
        "type": "object",
        "properties": {
          "partId": {
            "type": "integer"
          },
          "side": {
            "type": "string",
            "enum": [
              "front",
              "back"
            ]
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "textColor": {
            "type": "string"
          },
          "imageId": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "partId",
          "side",
          "name",
          "description",
          "color",
          "textColor",
          "createdAt",
          "updatedAt"
        ]
      },
      "Permission": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "resource": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "resource",
          "action",
          "createdAt",
          "updatedAt"
        ]
      },
      "Prototype": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "prototypeGroupId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "MASTER",
              "VERSION",
              "INSTANCE"
            ]
          },
          "versionNumber": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "prototypeGroupId",
          "name",
          "type",
          "versionNumber",
          "createdAt",
          "updatedAt"
        ]
      },
      "PrototypeGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "userId",
          "createdAt",
          "updatedAt"
        ]
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "createdAt",
          "updatedAt"
        ]
      },
      "RolePermission": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer"
          },
          "permissionId": {
            "type": "integer"
          }
        },
        "required": [
          "roleId",
          "permissionId"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "username",
          "createdAt",
          "updatedAt"
        ]
      },
      "UserRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "roleId": {
            "type": "integer"
          },
          "resourceType": {
            "type": "string"
          },
          "resourceId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "userId",
          "roleId",
          "resourceType",
          "resourceId",
          "createdAt",
          "updatedAt"
        ]
      }
    }
  },
  "paths": {
    "/api/users/search": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "ユーザー検索",
        "description": "ユーザー名でユーザーを検索します。",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true,
            "description": "検索するユーザー名",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "検索結果を返します",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{userId}": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "ユーザー情報更新",
        "description": "ユーザー名を更新します。",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "更新するユーザーのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "新しいユーザー名"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ユーザー情報が更新されました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "リクエストが不正です"
          },
          "401": {
            "description": "アクセス権がありません"
          },
          "404": {
            "description": "ユーザーが見つかりません"
          },
          "500": {
            "description": "サーバーエラー"
          }
        }
      }
    },
    "/api/prototype-groups": {
      "get": {
        "tags": [
          "PrototypeGroups"
        ],
        "summary": "プロトタイプグループ一覧取得",
        "description": "ユーザーがアクセス可能なプロトタイプグループの一覧を取得します。",
        "responses": {
          "200": {
            "description": "アクセス可能なプロトタイプグループの一覧を返します",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "prototypeGroup": {
                        "$ref": "#/components/schemas/PrototypeGroup"
                      },
                      "prototypes": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Prototype"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PrototypeGroups"
        ],
        "summary": "プロトタイプグループ作成",
        "description": "新しいプロトタイプグループを作成します。",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "新しいプロトタイプグループを作成しました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prototype"
                }
              }
            }
          },
          "400": {
            "description": "リクエストが不正です",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error400Response"
                }
              }
            }
          },
          "500": {
            "description": "サーバーエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/prototype-groups/{prototypeGroupId}/version": {
      "post": {
        "tags": [
          "PrototypeGroups"
        ],
        "summary": "プロトタイプバージョン作成",
        "description": "指定されたプロトタイプグループのプロトタイプバージョンを作成します。",
        "parameters": [
          {
            "name": "prototypeGroupId",
            "in": "path",
            "required": true,
            "description": "プロトタイプグループのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "versionNumber": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "プロトタイプバージョンを作成しました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prototype"
                }
              }
            }
          },
          "404": {
            "description": "プロトタイプグループが見つかりません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          },
          "500": {
            "description": "サーバーエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/prototype-groups/{prototypeGroupId}/{prototypeVersionId}/instance": {
      "post": {
        "tags": [
          "PrototypeGroups"
        ],
        "summary": "プロトタイプインスタンス作成",
        "description": "指定されたプロトタイプグループのプロトタイプインスタンスを作成します。",
        "parameters": [
          {
            "name": "prototypeGroupId",
            "in": "path",
            "required": true,
            "description": "プロトタイプグループのID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "prototypeVersionId",
            "in": "path",
            "required": true,
            "description": "プロトタイプバージョンのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "versionNumber": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "プロトタイプインスタンスを作成しました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prototype"
                }
              }
            }
          },
          "404": {
            "description": "プロトタイプグループが見つかりません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          },
          "500": {
            "description": "サーバーエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/prototype-groups/{prototypeGroupId}": {
      "get": {
        "tags": [
          "PrototypeGroups"
        ],
        "summary": "特定のグループに属するプロトタイプ一覧取得",
        "description": "指定されたIDのプロトタイプグループに属するプロトタイプの一覧を取得します。",
        "parameters": [
          {
            "name": "prototypeGroupId",
            "in": "path",
            "required": true,
            "description": "プロトタイプグループのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "プロトタイプグループに属するプロトタイプの一覧を返します",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "prototypeGroup": {
                      "$ref": "#/components/schemas/PrototypeGroup"
                    },
                    "prototypes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Prototype"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "プロトタイプグループが見つかりません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PrototypeGroups"
        ],
        "summary": "プロトタイプグループ削除",
        "description": "指定されたIDのプロトタイプグループを削除します。",
        "parameters": [
          {
            "name": "prototypeGroupId",
            "in": "path",
            "required": true,
            "description": "プロトタイプグループのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "プロトタイプグループを削除しました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "プロトタイプグループが見つかりません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/prototype-groups/{prototypeGroupId}/access-users": {
      "get": {
        "tags": [
          "PrototypeGroups"
        ],
        "summary": "プロトタイプグループへのアクセス権を取得",
        "description": "指定されたプロトタイプグループにアクセス可能なユーザーを取得します。",
        "parameters": [
          {
            "name": "prototypeGroupId",
            "in": "path",
            "required": true,
            "description": "プロトタイプグループのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "アクセス可能なユーザーの一覧を返します",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/prototype-groups/{prototypeGroupId}/invite": {
      "post": {
        "tags": [
          "PrototypeGroups"
        ],
        "summary": "ユーザーにプロトタイプへのアクセス権を付与",
        "description": "指定されたプロトタイプグループにユーザーを招待します。",
        "parameters": [
          {
            "name": "prototypeGroupId",
            "in": "path",
            "required": true,
            "description": "プロトタイプグループのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "guestIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "招待するユーザーのIDリスト"
                  },
                  "roleType": {
                    "type": "string",
                    "enum": [
                      "admin",
                      "editor",
                      "viewer"
                    ],
                    "default": "editor",
                    "description": "付与するロールタイプ（admin：管理者、editor：編集者、viewer：閲覧者）"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ユーザーを招待しました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "リクエストが不正です（無効なロールタイプまたは無効なロールが指定された場合）",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error400Response"
                }
              }
            }
          },
          "404": {
            "description": "グループが見つかりません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          },
          "500": {
            "description": "サーバーエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/prototype-groups/{prototypeGroupId}/invite/{guestId}": {
      "delete": {
        "tags": [
          "PrototypeGroups"
        ],
        "summary": "ユーザーのアクセス権を削除",
        "description": "指定されたプロトタイプグループからユーザーのアクセス権を削除します。",
        "parameters": [
          {
            "name": "prototypeGroupId",
            "in": "path",
            "required": true,
            "description": "プロトタイプグループのID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "guestId",
            "in": "path",
            "required": true,
            "description": "ゲストユーザーのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ユーザーのアクセス権を削除しました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "リクエストが不正です",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error400Response"
                }
              }
            }
          },
          "404": {
            "description": "グループが見つかりません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          },
          "500": {
            "description": "サーバーエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/prototype-groups/{prototypeGroupId}/duplicate": {
      "post": {
        "tags": [
          "PrototypeGroups"
        ],
        "summary": "プロトタイプグループの複製",
        "description": "指定されたプロトタイプグループを複製します。",
        "parameters": [
          {
            "name": "prototypeGroupId",
            "in": "path",
            "required": true,
            "description": "プロトタイプグループのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "プロトタイプグループを複製しました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "プロトタイプグループが見つかりません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          },
          "500": {
            "description": "サーバーエラー",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/prototype-groups/{prototypeGroupId}/members": {
      "get": {
        "tags": [
          "PrototypeGroups"
        ],
        "summary": "プロトタイプグループのメンバー一覧取得",
        "description": "プロトタイプグループのメンバーとそのロールを取得します。",
        "parameters": [
          {
            "name": "prototypeGroupId",
            "in": "path",
            "required": true,
            "description": "プロトタイプグループのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "メンバー一覧を返します",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string"
                      },
                      "roles": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/prototype-groups/{prototypeGroupId}/roles": {
      "get": {
        "tags": [
          "PrototypeGroups"
        ],
        "summary": "プロトタイプグループのロール一覧取得",
        "description": "プロトタイプグループのユーザーロール一覧を取得します。",
        "parameters": [
          {
            "in": "path",
            "name": "prototypeGroupId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "プロトタイプグループのID"
          }
        ],
        "responses": {
          "200": {
            "description": "ロール一覧",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string"
                      },
                      "user": {
                        "$ref": "#/components/schemas/User"
                      },
                      "roles": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PrototypeGroups"
        ],
        "summary": "プロトタイプグループにロールを追加",
        "description": "ユーザーにプロトタイプグループのロールを割り当てます。",
        "parameters": [
          {
            "in": "path",
            "name": "prototypeGroupId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "プロトタイプグループのID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "roleName": {
                    "type": "string",
                    "enum": [
                      "admin",
                      "editor",
                      "viewer"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ロールが追加されました"
          },
          "400": {
            "description": "リクエストが不正です"
          },
          "404": {
            "description": "ユーザーまたはロールが見つかりません"
          },
          "409": {
            "description": "ユーザーは既にこのロールを持っています"
          }
        }
      }
    },
    "/api/prototype-groups/{prototypeGroupId}/roles/{userId}": {
      "delete": {
        "tags": [
          "PrototypeGroups"
        ],
        "summary": "プロトタイプグループからロールを削除",
        "description": "ユーザーからプロトタイプグループのロールを削除します。",
        "parameters": [
          {
            "in": "path",
            "name": "prototypeGroupId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "プロトタイプグループのID"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ユーザーのID"
          }
        ],
        "responses": {
          "200": {
            "description": "ロールが削除されました"
          },
          "404": {
            "description": "ユーザーまたはロールが見つかりません"
          }
        }
      },
      "put": {
        "tags": [
          "PrototypeGroups"
        ],
        "summary": "プロトタイプグループのロールを更新",
        "description": "ユーザーのプロトタイプグループロールを変更します。",
        "parameters": [
          {
            "in": "path",
            "name": "prototypeGroupId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "プロトタイプグループのID"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ユーザーのID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleName": {
                    "type": "string",
                    "enum": [
                      "admin",
                      "editor",
                      "viewer"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ロールが更新されました"
          },
          "400": {
            "description": "リクエストが不正です"
          },
          "404": {
            "description": "ユーザーまたはロールが見つかりません"
          }
        }
      }
    },
    "/api/prototypes/{prototypeId}": {
      "get": {
        "tags": [
          "Prototypes"
        ],
        "summary": "特定のプロトタイプ取得",
        "description": "指定されたIDのプロトタイプを取得します。",
        "parameters": [
          {
            "name": "prototypeId",
            "in": "path",
            "required": true,
            "description": "プロトタイプのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "プロトタイプを返します",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "prototype": {
                      "$ref": "#/components/schemas/Prototype"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "プロトタイプが見つかりません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Prototypes"
        ],
        "summary": "プロトタイプ更新",
        "description": "指定されたIDのプロトタイプを更新します。",
        "parameters": [
          {
            "name": "prototypeId",
            "in": "path",
            "required": true,
            "description": "プロトタイプのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "minPlayers": {
                    "type": "integer"
                  },
                  "maxPlayers": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "プロトタイプを更新しました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prototype"
                }
              }
            }
          },
          "404": {
            "description": "プロトタイプが見つかりません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Prototypes"
        ],
        "summary": "プロトタイプ削除",
        "description": "指定されたIDのプロトタイプを削除します。",
        "parameters": [
          {
            "name": "prototypeId",
            "in": "path",
            "required": true,
            "description": "プロトタイプのID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "プロトタイプを削除しました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "プロトタイプが見つかりません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/images": {
      "post": {
        "tags": [
          "Images"
        ],
        "summary": "画像アップロード",
        "description": "S3に画像をアップロードし、画像のメタデータを保存します。",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "アップロードする画像ファイル"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "画像が正常にアップロードされました",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Image"
                }
              }
            }
          },
          "400": {
            "description": "アップロード対象の画像が存在しない、またはサポートされていない画像形式です",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error400Response"
                }
              }
            }
          },
          "401": {
            "description": "認証されていないユーザーです",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error401Response"
                }
              }
            }
          },
          "500": {
            "description": "画像のアップロードに失敗しました",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/images/{imageId}": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "画像取得",
        "description": "S3から指定された画像を取得し、画像データを直接返します。",
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "description": "取得する画像のID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "画像が正常に取得されました",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Image ID が指定されていない、またはリクエストが不正です",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error400Response"
                }
              }
            }
          },
          "401": {
            "description": "認証されていないユーザーです",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error401Response"
                }
              }
            }
          },
          "404": {
            "description": "指定された画像が存在しません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          },
          "500": {
            "description": "画像を取得できませんでした",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500Response"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Images"
        ],
        "summary": "画像削除",
        "description": "S3から指定された画像を削除します。",
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "description": "削除する画像のID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "画像が正常に削除されました"
          },
          "400": {
            "description": "Image ID が指定されていない、またはリクエストが不正です",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error400Response"
                }
              }
            }
          },
          "401": {
            "description": "認証されていないユーザーです",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error401Response"
                }
              }
            }
          },
          "404": {
            "description": "指定された画像が存在しません",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404Response"
                }
              }
            }
          },
          "500": {
            "description": "画像を削除できませんでした",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500Response"
                }
              }
            }
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Googleログイン",
        "description": "Googleアカウントを使用してログインします。",
        "responses": {
          "302": {
            "description": "リダイレクト",
            "headers": {
              "Location": {
                "description": "リダイレクト先のURL",
                "schema": {
                  "type": "string"
                },
                "example": "https://accounts.google.com/o/oauth2/auth"
              }
            }
          }
        }
      }
    },
    "/auth/google/callback": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Googleログインコールバック",
        "description": "GoogleログインのコールバックURL。",
        "responses": {
          "302": {
            "description": "ログイン成功時にリダイレクト",
            "headers": {
              "Location": {
                "description": "リダイレクト先のURL",
                "schema": {
                  "type": "string"
                },
                "example": "http://localhost:3000/groups"
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "ログアウト",
        "description": "現在のセッションを終了し、ユーザーをログアウトします。",
        "responses": {
          "200": {
            "description": "ログアウト成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "500": {
            "description": "ログアウト失敗",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500Response"
                }
              }
            }
          }
        }
      }
    },
    "/auth/user": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "ユーザー情報取得",
        "description": "現在ログインしているユーザーの情報を取得します。",
        "responses": {
          "200": {
            "description": "ユーザー情報を返します",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Users",
      "description": "ユーザー管理API"
    },
    {
      "name": "Prototypes",
      "description": "プロトタイプ管理API"
    },
    {
      "name": "Images",
      "description": "画像管理API"
    },
    {
      "name": "Auth",
      "description": "認証関連のAPI"
    }
  ]
}